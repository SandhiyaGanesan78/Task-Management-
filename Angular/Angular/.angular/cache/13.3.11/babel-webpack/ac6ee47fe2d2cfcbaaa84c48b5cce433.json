{"ast":null,"code":"/**\n * @license Angular v13.4.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Location, LocationStrategy } from '@angular/common';\nimport { SpyLocation, MockLocationStrategy } from '@angular/common/testing';\nimport * as i0 from '@angular/core';\nimport { Compiler, Injector, Optional, NgModule } from '@angular/core';\nimport { Router, ɵflatten, ɵassignExtraOptionsToRouter, provideRoutes, ROUTER_CONFIGURATION, RouterModule, ɵROUTER_PROVIDERS, UrlSerializer, ChildrenOutletContexts, ROUTES, UrlHandlingStrategy, RouteReuseStrategy, PreloadingStrategy, NoPreloading } from '@angular/router';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists to easily patch the SpyNgModuleFactoryLoader into g3\nconst EXTRA_ROUTER_TESTING_PROVIDERS = [];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isUrlHandlingStrategy(opts) {\n  // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n  // runtime.\n  return 'shouldProcessUrl' in opts;\n}\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\nfunction setupTestingRouter(urlSerializer, contexts, location, compiler, injector, routes, opts, urlHandlingStrategy, routeReuseStrategy) {\n  const router = new Router(null, urlSerializer, contexts, location, injector, compiler, ɵflatten(routes));\n  if (opts) {\n    // Handle deprecated argument ordering.\n    if (isUrlHandlingStrategy(opts)) {\n      router.urlHandlingStrategy = opts;\n    } else {\n      // Handle ExtraOptions\n      ɵassignExtraOptionsToRouter(opts, router);\n    }\n  }\n  if (urlHandlingStrategy) {\n    router.urlHandlingStrategy = urlHandlingStrategy;\n  }\n  if (routeReuseStrategy) {\n    router.routeReuseStrategy = routeReuseStrategy;\n  }\n  return router;\n}\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location` and `LocationStrategy`.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestingModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n */\nclass RouterTestingModule {\n  static withRoutes(routes, config) {\n    return {\n      ngModule: RouterTestingModule,\n      providers: [provideRoutes(routes), {\n        provide: ROUTER_CONFIGURATION,\n        useValue: config ? config : {}\n      }]\n    };\n  }\n}\nRouterTestingModule.ɵfac = function RouterTestingModule_Factory(t) {\n  return new (t || RouterTestingModule)();\n};\nRouterTestingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RouterTestingModule,\n  exports: [RouterModule]\n});\nRouterTestingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [ɵROUTER_PROVIDERS, EXTRA_ROUTER_TESTING_PROVIDERS, {\n    provide: Location,\n    useClass: SpyLocation\n  }, {\n    provide: LocationStrategy,\n    useClass: MockLocationStrategy\n  }, {\n    provide: Router,\n    useFactory: setupTestingRouter,\n    deps: [UrlSerializer, ChildrenOutletContexts, Location, Compiler, Injector, ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]]\n  }, {\n    provide: PreloadingStrategy,\n    useExisting: NoPreloading\n  }, provideRoutes([])],\n  imports: [RouterModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterTestingModule, [{\n    type: NgModule,\n    args: [{\n      exports: [RouterModule],\n      providers: [ɵROUTER_PROVIDERS, EXTRA_ROUTER_TESTING_PROVIDERS, {\n        provide: Location,\n        useClass: SpyLocation\n      }, {\n        provide: LocationStrategy,\n        useClass: MockLocationStrategy\n      }, {\n        provide: Router,\n        useFactory: setupTestingRouter,\n        deps: [UrlSerializer, ChildrenOutletContexts, Location, Compiler, Injector, ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]]\n      }, {\n        provide: PreloadingStrategy,\n        useExisting: NoPreloading\n      }, provideRoutes([])]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists for easily patching SpyNgModuleFactoryLoader in g3\nvar spy_ng_module_factory_loader = {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RouterTestingModule, setupTestingRouter };","map":{"version":3,"names":["Location","LocationStrategy","SpyLocation","MockLocationStrategy","i0","Compiler","Injector","Optional","NgModule","Router","ɵflatten","ɵassignExtraOptionsToRouter","provideRoutes","ROUTER_CONFIGURATION","RouterModule","ɵROUTER_PROVIDERS","UrlSerializer","ChildrenOutletContexts","ROUTES","UrlHandlingStrategy","RouteReuseStrategy","PreloadingStrategy","NoPreloading","EXTRA_ROUTER_TESTING_PROVIDERS","isUrlHandlingStrategy","opts","setupTestingRouter","urlSerializer","contexts","location","compiler","injector","routes","urlHandlingStrategy","routeReuseStrategy","router","RouterTestingModule","withRoutes","config","ngModule","providers","provide","useValue","ɵfac","RouterTestingModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","exports","ɵinj","ɵɵdefineInjector","useClass","useFactory","deps","useExisting","imports","ngDevMode","ɵsetClassMetadata","args","spy_ng_module_factory_loader"],"sources":["C:/Users/sandhiya.ganesan/Desktop/sandhiya/Task/Angular/Angular/node_modules/@angular/router/fesm2015/testing.mjs"],"sourcesContent":["/**\n * @license Angular v13.4.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Location, LocationStrategy } from '@angular/common';\nimport { SpyLocation, MockLocationStrategy } from '@angular/common/testing';\nimport * as i0 from '@angular/core';\nimport { Compiler, Injector, Optional, NgModule } from '@angular/core';\nimport { Router, ɵflatten, ɵassignExtraOptionsToRouter, provideRoutes, ROUTER_CONFIGURATION, RouterModule, ɵROUTER_PROVIDERS, UrlSerializer, ChildrenOutletContexts, ROUTES, UrlHandlingStrategy, RouteReuseStrategy, PreloadingStrategy, NoPreloading } from '@angular/router';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists to easily patch the SpyNgModuleFactoryLoader into g3\nconst EXTRA_ROUTER_TESTING_PROVIDERS = [];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isUrlHandlingStrategy(opts) {\n    // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n    // runtime.\n    return 'shouldProcessUrl' in opts;\n}\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\nfunction setupTestingRouter(urlSerializer, contexts, location, compiler, injector, routes, opts, urlHandlingStrategy, routeReuseStrategy) {\n    const router = new Router(null, urlSerializer, contexts, location, injector, compiler, ɵflatten(routes));\n    if (opts) {\n        // Handle deprecated argument ordering.\n        if (isUrlHandlingStrategy(opts)) {\n            router.urlHandlingStrategy = opts;\n        }\n        else {\n            // Handle ExtraOptions\n            ɵassignExtraOptionsToRouter(opts, router);\n        }\n    }\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    return router;\n}\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location` and `LocationStrategy`.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestingModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n */\nclass RouterTestingModule {\n    static withRoutes(routes, config) {\n        return {\n            ngModule: RouterTestingModule,\n            providers: [\n                provideRoutes(routes),\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n            ]\n        };\n    }\n}\nRouterTestingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: RouterTestingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRouterTestingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: RouterTestingModule, exports: [RouterModule] });\nRouterTestingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: RouterTestingModule, providers: [\n        ɵROUTER_PROVIDERS,\n        EXTRA_ROUTER_TESTING_PROVIDERS,\n        { provide: Location, useClass: SpyLocation },\n        { provide: LocationStrategy, useClass: MockLocationStrategy },\n        {\n            provide: Router,\n            useFactory: setupTestingRouter,\n            deps: [\n                UrlSerializer, ChildrenOutletContexts, Location, Compiler, Injector, ROUTES,\n                ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()],\n                [RouteReuseStrategy, new Optional()]\n            ]\n        },\n        { provide: PreloadingStrategy, useExisting: NoPreloading },\n        provideRoutes([]),\n    ], imports: [RouterModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: RouterTestingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [RouterModule],\n                    providers: [\n                        ɵROUTER_PROVIDERS,\n                        EXTRA_ROUTER_TESTING_PROVIDERS,\n                        { provide: Location, useClass: SpyLocation },\n                        { provide: LocationStrategy, useClass: MockLocationStrategy },\n                        {\n                            provide: Router,\n                            useFactory: setupTestingRouter,\n                            deps: [\n                                UrlSerializer, ChildrenOutletContexts, Location, Compiler, Injector, ROUTES,\n                                ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()],\n                                [RouteReuseStrategy, new Optional()]\n                            ]\n                        },\n                        { provide: PreloadingStrategy, useExisting: NoPreloading },\n                        provideRoutes([]),\n                    ]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists for easily patching SpyNgModuleFactoryLoader in g3\nvar spy_ng_module_factory_loader = {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RouterTestingModule, setupTestingRouter };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,gBAAgB,QAAQ,iBAAiB;AAC5D,SAASC,WAAW,EAAEC,oBAAoB,QAAQ,yBAAyB;AAC3E,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,eAAe;AACtE,SAASC,MAAM,EAAEC,QAAQ,EAAEC,2BAA2B,EAAEC,aAAa,EAAEC,oBAAoB,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,aAAa,EAAEC,sBAAsB,EAAEC,MAAM,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,YAAY,QAAQ,iBAAiB;;AAE/Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,8BAA8B,GAAG,EAAE;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,qBAAqBA,CAACC,IAAI,EAAE;EACjC;EACA;EACA,OAAO,kBAAkB,IAAIA,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAACC,aAAa,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEP,IAAI,EAAEQ,mBAAmB,EAAEC,kBAAkB,EAAE;EACtI,MAAMC,MAAM,GAAG,IAAI1B,MAAM,CAAC,IAAI,EAAEkB,aAAa,EAAEC,QAAQ,EAAEC,QAAQ,EAAEE,QAAQ,EAAED,QAAQ,EAAEpB,QAAQ,CAACsB,MAAM,CAAC,CAAC;EACxG,IAAIP,IAAI,EAAE;IACN;IACA,IAAID,qBAAqB,CAACC,IAAI,CAAC,EAAE;MAC7BU,MAAM,CAACF,mBAAmB,GAAGR,IAAI;IACrC,CAAC,MACI;MACD;MACAd,2BAA2B,CAACc,IAAI,EAAEU,MAAM,CAAC;IAC7C;EACJ;EACA,IAAIF,mBAAmB,EAAE;IACrBE,MAAM,CAACF,mBAAmB,GAAGA,mBAAmB;EACpD;EACA,IAAIC,kBAAkB,EAAE;IACpBC,MAAM,CAACD,kBAAkB,GAAGA,kBAAkB;EAClD;EACA,OAAOC,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,CAAC;EACtB,OAAOC,UAAUA,CAACL,MAAM,EAAEM,MAAM,EAAE;IAC9B,OAAO;MACHC,QAAQ,EAAEH,mBAAmB;MAC7BI,SAAS,EAAE,CACP5B,aAAa,CAACoB,MAAM,CAAC,EACrB;QAAES,OAAO,EAAE5B,oBAAoB;QAAE6B,QAAQ,EAAEJ,MAAM,GAAGA,MAAM,GAAG,CAAC;MAAE,CAAC;IAEzE,CAAC;EACL;AACJ;AACAF,mBAAmB,CAACO,IAAI,YAAAC,4BAAAC,CAAA;EAAA,YAAAA,CAAA,IAAwFT,mBAAmB;AAAA,CAAkD;AACrLA,mBAAmB,CAACU,IAAI,kBAD8E1C,EAAE,CAAA2C,gBAAA;EAAAC,IAAA,EACSZ,mBAAmB;EAAAa,OAAA,GAAYnC,YAAY;AAAA,EAAI;AAChKsB,mBAAmB,CAACc,IAAI,kBAF8E9C,EAAE,CAAA+C,gBAAA;EAAAX,SAAA,EAEyC,CACzIzB,iBAAiB,EACjBQ,8BAA8B,EAC9B;IAAEkB,OAAO,EAAEzC,QAAQ;IAAEoD,QAAQ,EAAElD;EAAY,CAAC,EAC5C;IAAEuC,OAAO,EAAExC,gBAAgB;IAAEmD,QAAQ,EAAEjD;EAAqB,CAAC,EAC7D;IACIsC,OAAO,EAAEhC,MAAM;IACf4C,UAAU,EAAE3B,kBAAkB;IAC9B4B,IAAI,EAAE,CACFtC,aAAa,EAAEC,sBAAsB,EAAEjB,QAAQ,EAAEK,QAAQ,EAAEC,QAAQ,EAAEY,MAAM,EAC3EL,oBAAoB,EAAE,CAACM,mBAAmB,EAAE,IAAIZ,QAAQ,CAAC,CAAC,CAAC,EAC3D,CAACa,kBAAkB,EAAE,IAAIb,QAAQ,CAAC,CAAC,CAAC;EAE5C,CAAC,EACD;IAAEkC,OAAO,EAAEpB,kBAAkB;IAAEkC,WAAW,EAAEjC;EAAa,CAAC,EAC1DV,aAAa,CAAC,EAAE,CAAC,CACpB;EAAA4C,OAAA,GAAY1C,YAAY;AAAA,EAAI;AACjC;EAAA,QAAA2C,SAAA,oBAAAA,SAAA,KAnBsGrD,EAAE,CAAAsD,iBAAA,CAmBbtB,mBAAmB,EAAc,CAAC;IACjHY,IAAI,EAAExC,QAAQ;IACdmD,IAAI,EAAE,CAAC;MACCV,OAAO,EAAE,CAACnC,YAAY,CAAC;MACvB0B,SAAS,EAAE,CACPzB,iBAAiB,EACjBQ,8BAA8B,EAC9B;QAAEkB,OAAO,EAAEzC,QAAQ;QAAEoD,QAAQ,EAAElD;MAAY,CAAC,EAC5C;QAAEuC,OAAO,EAAExC,gBAAgB;QAAEmD,QAAQ,EAAEjD;MAAqB,CAAC,EAC7D;QACIsC,OAAO,EAAEhC,MAAM;QACf4C,UAAU,EAAE3B,kBAAkB;QAC9B4B,IAAI,EAAE,CACFtC,aAAa,EAAEC,sBAAsB,EAAEjB,QAAQ,EAAEK,QAAQ,EAAEC,QAAQ,EAAEY,MAAM,EAC3EL,oBAAoB,EAAE,CAACM,mBAAmB,EAAE,IAAIZ,QAAQ,CAAC,CAAC,CAAC,EAC3D,CAACa,kBAAkB,EAAE,IAAIb,QAAQ,CAAC,CAAC,CAAC;MAE5C,CAAC,EACD;QAAEkC,OAAO,EAAEpB,kBAAkB;QAAEkC,WAAW,EAAEjC;MAAa,CAAC,EAC1DV,aAAa,CAAC,EAAE,CAAC;IAEzB,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIgD,4BAA4B,GAAG,CAAC,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAASxB,mBAAmB,EAAEV,kBAAkB"},"metadata":{},"sourceType":"module"}